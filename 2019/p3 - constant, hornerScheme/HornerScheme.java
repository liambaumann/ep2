import java.util.*;

// The class implements 'Polynomial' and represents the form (a + x*p), where 'a' is an Integer
// and 'p' is another polynomial. 'p' must not be 'null' (objects of 'Constant' shall be used to represent constants).
// This class implements 'Polynomial' by using Horner's scheme.
// Example:
// a‚ÇÄ + a‚ÇÅ*x + a‚ÇÇ*x¬≤ + a‚ÇÉ*x¬≥ + a‚ÇÑ*x‚Å¥
// The polynomial above is represented in Horner's scheme as:
// a‚ÇÄ + x*(a‚ÇÅ + x*(a‚ÇÇ + x*(a‚ÇÉ + x*a‚ÇÑ)))
//
public class HornerScheme /* TODO: fix declaration. */ {

    //TODO: define missing parts of this class.

    // Initializes this object.
    // Precondition: 'p' must not be 'null'.
    public HornerScheme(int a, Polynomial p) {
        //TODO: implement this constructor.
    }

    // Creates a polynomial from the coefficients specified by the array coeffs = {a‚ÇÄ, a‚ÇÅ, a‚ÇÇ, ... aùò•}.
    // Precondition: coeffs != null and coeffs has at least one element.
    public static Polynomial create(int[] coeffs) {
        //TODO: implement this method.
        return null;
    }

}



